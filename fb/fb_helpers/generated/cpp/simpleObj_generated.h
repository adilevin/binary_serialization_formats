// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_SIMPLEOBJ_FB_HELPERS_H_
#define FLATBUFFERS_GENERATED_SIMPLEOBJ_FB_HELPERS_H_

#include "flatbuffers/flatbuffers.h"

namespace fb_helpers {

struct SimpleObj;

struct SimpleObj FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {
    VT_A = 4,
    VT_B = 6
  };
  uint16_t a() const {
    return GetField<uint16_t>(VT_A, 0);
  }
  uint16_t b() const {
    return GetField<uint16_t>(VT_B, 0);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<uint16_t>(verifier, VT_A) &&
           VerifyField<uint16_t>(verifier, VT_B) &&
           verifier.EndTable();
  }
};

struct SimpleObjBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_a(uint16_t a) {
    fbb_.AddElement<uint16_t>(SimpleObj::VT_A, a, 0);
  }
  void add_b(uint16_t b) {
    fbb_.AddElement<uint16_t>(SimpleObj::VT_B, b, 0);
  }
  explicit SimpleObjBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  SimpleObjBuilder &operator=(const SimpleObjBuilder &);
  flatbuffers::Offset<SimpleObj> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<SimpleObj>(end);
    return o;
  }
};

inline flatbuffers::Offset<SimpleObj> CreateSimpleObj(
    flatbuffers::FlatBufferBuilder &_fbb,
    uint16_t a = 0,
    uint16_t b = 0) {
  SimpleObjBuilder builder_(_fbb);
  builder_.add_b(b);
  builder_.add_a(a);
  return builder_.Finish();
}

inline const fb_helpers::SimpleObj *GetSimpleObj(const void *buf) {
  return flatbuffers::GetRoot<fb_helpers::SimpleObj>(buf);
}

inline const fb_helpers::SimpleObj *GetSizePrefixedSimpleObj(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<fb_helpers::SimpleObj>(buf);
}

inline bool VerifySimpleObjBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<fb_helpers::SimpleObj>(nullptr);
}

inline bool VerifySizePrefixedSimpleObjBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<fb_helpers::SimpleObj>(nullptr);
}

inline void FinishSimpleObjBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<fb_helpers::SimpleObj> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedSimpleObjBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<fb_helpers::SimpleObj> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace fb_helpers

#endif  // FLATBUFFERS_GENERATED_SIMPLEOBJ_FB_HELPERS_H_
